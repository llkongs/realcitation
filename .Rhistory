ks.test(train_in2$h.index,test_in2$h.index)
ks.test(train_in2$number,test_in2$number)
ks.test(train_in2$allc,test_in2$allc)
set.seed(1234)
sap1 <- sample(212,148)
train_in1 <- in1[sap1,];test_in1 <- in1[-sap1,]
sap2 <- sample(327,229)
train_in2 <- in2[sap2,];test_in2 <- in2[-sap2,]
summary(train_in1[,c("h.index","number","allc")])
summary(test_in1[,c("h.index","number","allc")])
ks.test(train_in1$h.index,test_in1$h.index)
ks.test(train_in1$number,test_in1$number)
ks.test(train_in1$allc,test_in1$allc)
ks.test(train_in2$h.index,test_in2$h.index)
ks.test(train_in2$number,test_in2$number)
ks.test(train_in2$allc,test_in2$allc)
sap2 <- sample(327,229)
train_in2 <- in2[sap2,];test_in2 <- in2[-sap2,]
ks.test(train_in2$h.index,test_in2$h.index)
ks.test(train_in2$number,test_in2$number)
ks.test(train_in2$allc,test_in2$allc)
ks.test(train_in2$h.index,test_in2$h.index)
ks.test(train_in2$number,test_in2$number)
ks.test(train_in2$allc,test_in2$allc)
sap2 <- sample(327,229)
ks.test(train_in2$h.index,test_in2$h.index)
ks.test(train_in2$number,test_in2$number)
ks.test(train_in2$allc,test_in2$allc)
sap2 <- sample(327,229)
ks.test(train_in2$h.index,test_in2$h.index)
ks.test(train_in2$number,test_in2$number)
ks.test(train_in2$allc,test_in2$allc)
summary(train_in1[,c("h.index","number","allc")])
summary(test_in1[,c("h.index","number","allc")])
ks.test(train_in1$h.index,test_in1$h.index)
ks.test(train_in1$number,test_in1$number)
ks.test(train_in1$allc,test_in1$allc)
summary(train_in2[,c("h.index", "number","allc")])
summary(test_in2[,c("h.index", "number","allc")])
ks.test(train_in2$h.index,test_in2$h.index)
ks.test(train_in2$number,test_in2$number)
ks.test(train_in2$allc,test_in2$allc)
set.seed(223)
sap2 <- sample(327,229)
train_in2 <- in2[sap2,];test_in2 <- in2[-sap2,]
summary(train_in1[,c("h.index","number","allc")])
summary(test_in1[,c("h.index","number","allc")])
ks.test(train_in1$h.index,test_in1$h.index)
ks.test(train_in1$number,test_in1$number)
ks.test(train_in1$allc,test_in1$allc)
ks.test(train_in2$h.index,test_in2$h.index)
ks.test(train_in2$number,test_in2$number)
ks.test(train_in2$allc,test_in2$allc)
summary(train_in2[,c("h.index", "number","allc")])
summary(test_in2[,c("h.index", "number","allc")])
ks.test(train_in2$h.index,test_in2$h.index)
ks.test(train_in2$number,test_in2$number)
ks.test(train_in2$allc,test_in2$allc)
save.image("F:/Rprojects/realcitation/.RData")
which(in1$year1st > 20)
which(in1$year1st > 15)
summary(year1st)
summary(in$1year1st)
summary(in1$year1st)
separate
head(py1980)
head(py1980)
head(newdata)
head(nd1)
separate
dim(nd1)
dim(cmp)
x
sum(x[5:end])
sum(x[5:End])
colnames(nda1)
colnames(nd1)
sepr <- function(data, year) {
a <- subset(data, pyear <= year)
a <- a[,1:(year - 2014 + 122)]
for (i in 1:length(a$tc)) a$tc[i] <- sum((a[i,])[8:(year - 2014 + 122)])
return(a)
}
save.image("F:/Rprojects/realcitation/.RData")
trainM10
fitm101 <- lm(h01 ~ h.index + sqrt(number) + journals + vip + sqrt(allc)+a,data = train_M10)
inter1 <- which(train_M$h.index <=20 & train_M$h.index >= 10)
trainM10 <- train_M[inter1,]
fitm101 <- lm(h01 ~ h.index + sqrt(number) + journals + vip + sqrt(allc)+a,data = train_M10)
fitm101 <- lm(h01 ~ h.index + sqrt(number) + journals + vip + sqrt(allc)+a,data = trainM10)
summary(fitm101)
fitm105 <- lm(h05 ~ h.index + sqrt(number) + journals + vip + sqrt(allc)+a,data = trainM10)
summary(fit105)
summary(fitm105)
trainM10
trainM10
train_M$h10/train_M$h.index
dim(train_M)
dim(Mindata)
N_in00
Mindata
Mindata1
N_in01
Mind1 <- M_in00;Mind1$g01 <- M_in01$g.index;Mind1$g05 <- M_in05$g.index;Mind$g10 <- M_in10$g.index
Mind1 <- M_in00;Mind1$g01 <- M_in01$g.index;Mind1$g05 <- M_in05$g.index;Mind1$g10 <- M_in10$g.index
Mind1$r01 <- M_in01$r.index;Mind1$r05 <- M_in05$r.index;Mind1$r10 <- M_in10$r.index
fitg01 <- lm(g01 ~ g.index + sqrt(number)+journals + vip + sqrt(allc) +a,data = Mind1)
summary(fitg01)
fitg05 <- lm(g05 ~ g.index + sqrt(number)+journals + vip + sqrt(allc) +a,data = Mind1)
summary(fitg05)
fitg10 <- lm(g10 ~ g.index + sqrt(number)+journals + vip + sqrt(allc) +a,data = Mind1)
summary(fitg10)
fitr01 <- lm(r01 ~ g.index + sqrt(number)+journals + vip + sqrt(allc) +a,data = Mind1)
fitr05 <- lm(r05 ~ g.index + sqrt(number)+journals + vip + sqrt(allc) +a,data = Mind1)
fitr10 <- lm(r10 ~ g.index + sqrt(number)+journals + vip + sqrt(allc) +a,data = Mind1)
summary(fitr01)
summary(fitr05)
summary(fitr10)
save.image("F:/Rprojects/realcitation/.RData")
Nind1 <- N_in00;Nind1$g01 <- N_in01$g.index;Nind1$g05 <- N_in05$g.index;Nind1$g10 <- N_in10$g.index
Nind1$r01 <- N_in01$r.index;Nind1$r05 <- N_in05$r.index;Nind1$r10 <- N_in10$r.index
fitg01N <- lm(g01 ~ g.index + sqrt(number)+journals + vip + sqrt(allc) +a,data = Nind1)
fitg05N <- lm(g05 ~ g.index + sqrt(number)+journals + vip + sqrt(allc) +a,data = Nind1)
fitg10N <- lm(g10 ~ g.index + sqrt(number)+journals + vip + sqrt(allc) +a,data = Nind1)
fitr01N <- lm(r01 ~ g.index + sqrt(number)+journals + vip + sqrt(allc) +a,data = Nind1)
fitr05N <- lm(r05 ~ g.index + sqrt(number)+journals + vip + sqrt(allc) +a,data = Nind1)
fitr10N <- lm(r10 ~ g.index + sqrt(number)+journals + vip + sqrt(allc) +a,data = Nind1)
summary(fitg01N)
summary(fitg05N)
summary(fitg10N)
summary(fitr01N)
summary(fitr05N)
summary(fitr10N)
summary(fitg01)
summary(fitg05)
summary(fitg10)
save.image("F:/Rprojects/realcitation/.RData")
summary(fitg01N)
summary(fitg05N)
summary(fitg10N)
preMg10 <-predict(fitg10,Mind1)
premg10 <- data.frame("predict" = preMg10, "g10" = Mind1$g10)
preMg10 <-predict(fitg10,Mind1)
premg10 <- data.frame("predict" = preMg10, "g10" = Mind1$g10)
mg10 <- ggplot(data = premg10,mapping = aes(x = g10,y = predict ))
mg10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)
library(ggplot2)
mg10 <- ggplot(data = premg10,mapping = aes(x = g10,y = predict ))
mg10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)
mg10 <- ggplot(data = premg10,mapping = aes(x = g10,y = predict ))
mg10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)+ylim(c(0,150))
preNg10 <-predict(fitg10N,Nind1)
preng10 <- data.frame("predict" = preNg10, "g10" = Nind1$g10)
ng10 <- ggplot(data = preng10,mapping = aes(x = g10,y = predict ))
ng10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)+ylim(c(0,150))
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)
ng10 <- ggplot(data = preng10,mapping = aes(x = g10,y = predict ))
ng10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)
unclass(preNg10)
preNg10 <-predict(fitg10N,Nind1,interval = 'prediction')
unclass(preNg10)
preNg10 <-predict(fitg10N,Nind1,interval = 'prediction')
preng10 <- data.frame("predict" = preNg10$fit, "g10" = Nind1$g10)
ng10 <- ggplot(data = preng10,mapping = aes(x = g10,y = predict ))
ng10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)
?geom_line
preng10 <- data.frame(preNg10, "g10" = Nind1$g10)
preng10
preng10 <- data.frame(preNg10, "g10" = Nind1$g10)
ng10 <- ggplot(data = preng10,mapping = aes(x = g10,y = fit ))
ng10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1) + geom_line(
mapping = aes(x=g10,y = lwr))
preNg10 <-predict(fitg10N,Nind1,interval = 'prediction')
preng10 <- data.frame(preNg10, "g10" = Nind1$g10)
ng10 <- ggplot(data = preng10,mapping = aes(x = g10,y = fit ))
ng10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)
summary(fitr01)
summary(fitr05)
summary(fitr10)
fitr01N <- lm(r01 ~ g.index + sqrt(number)+journals + vip + sqrt(allc) +a,data = Nind1)
fitr05N <- lm(r05 ~ g.index + sqrt(number)+journals + vip + sqrt(allc) +a,data = Nind1)
fitr10N <- lm(r10 ~ g.index + sqrt(number)+journals + vip + sqrt(allc) +a,data = Nind1)
summary(fitr01N)
summary(fitr05N)
summary(fitr10N)
save.image("F:/Rprojects/realcitation/.RData")
preMr10 <-predict(fitr10,Mind1)
premr10 <- data.frame("predict" = preMr10, "r10" = Mind1$r10)
mr10 <- ggplot(data = premg10,mapping = aes(x = r10,y = predict ))
mr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)+ylim(c(0,150))
premr10 <- data.frame("predict" = preMr10, "r10" = Mind1$r10)
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)+ylim(c(0,150))
mr10 <- ggplot(data = premr10,mapping = aes(x = r10,y = predict ))
mr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)+ylim(c(0,150))
preMr10 <-predict(fitr10,Mind1)
premr10 <- data.frame("predict" = preMr10, "r10" = Mind1$r10)
mr10 <- ggplot(data = premr10,mapping = aes(x = r10,y = predict ))
mr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)+ylim(c(0,150))
preNr10 <-predict(fitr10N,Nind1,interval = 'prediction')
prenr10 <- data.frame(preNr10, "r10" = Nind1$r10)
nr10 <- ggplot(data = prenr10,mapping = aes(x = r10,y = fit ))
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)
prenr10
prenr10$upr/prenr10$fit
preNr10 <-predict(fitr10N,Nind1,interval = 'prediction')
prenr10 <- data.frame(preNr10, "r10" = Nind1$r10)
nr10 <- ggplot(data = prenr10,mapping = aes(x = fit,y = r10 ))
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1) + geom_line(
mapping = aes(x=fit,y = upr))
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1) + geom_line(
mapping = aes(x=fit,y = upr)) + geom_line(x = fit, y = lwr)
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1) + geom_line(
mapping = aes(x=fit,y = upr)) + geom_line(aes(x = fit, y = lwr))
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1) + geom_line(
mapping = aes(x=fit,y = upr,linetype = 2,cex = 1)) + geom_line(aes(x = fit, y = lwr))
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1) + geom_line(
mapping = aes(x=fit,y = upr,type = 2,cex = 1)) + geom_line(aes(x = fit, y = lwr))
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1) + geom_line(
mapping = aes(x=fit,y = upr,type = 2)) + geom_line(aes(x = fit, y = lwr))
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1) + geom_line(
mapping = aes(x=fit,y = upr,linetype = 2)) + geom_line(aes(x = fit, y = lwr))
?linetype
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1) + geom_line(
mapping = aes(x=fit,y = upr,linetype = 1)) + geom_line(aes(x = fit, y = lwr))
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1) + geom_line(
mapping = aes(x=fit,y = upr,linetype = "3313")) + geom_line(aes(x = fit, y = lwr))
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1) + geom_line(
mapping = aes(x=fit,y = upr)) + geom_line(aes(x = fit, y = lwr))
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "预测值",y="真实值") + geom_smooth(col = "red",cex=1) + geom_line(
mapping = aes(x=fit,y = upr)) + geom_line(aes(x = fit, y = lwr))
preMr10 <-predict(fitr10,Mind1,interval = 'prediction')
premr10 <- data.frame( preMr10, "r10" = Mind1$r10)
mr10 <- ggplot(data = premr10,mapping = aes(x = fit,y = r10 ))
mr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "预测值",y="真实值") + geom_smooth(col = "red",cex=1)+ylim(c(0,150))+ geom_line(
mapping = aes(x=fit,y = upr)) + geom_line(aes(x = fit, y = lwr))
preNr10 <-predict(fitr10N,Nind1,interval = 'prediction')
prenr10 <- data.frame(preNr10, "r10" = Nind1$r10)
nr10 <- ggplot(data = prenr10,mapping = aes(x = fit,y = r10 ))
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "预测值",y="真实值") + geom_smooth(col = "red",cex=1) + geom_line(
mapping = aes(x=fit,y = upr)) + geom_line(aes(x = fit, y = lwr))
preNg10 <-predict(fitg10N,Nind1,interval = 'prediction')
preng10 <- data.frame(preNg10, "g10" = Nind1$g10)
ng10 <- ggplot(data = preng10,mapping = aes(x = fit,y = g10 ))
ng10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)+ geom_line(
mapping = aes(x=fit,y = upr)) + geom_line(aes(x = fit, y = lwr))
preMg10 <-predict(fitg10,Mind1,interval = 'prediction')
premg10 <- data.frame( preMg10, "g10" = Mind1$g10)
mg10 <- ggplot(data = premg10,mapping = aes(x = fit,y = g10 ))
mg10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)+ylim(c(0,150))+ geom_line(
mapping = aes(x=fit,y = upr)) + geom_line(aes(x = fit, y = lwr))
preMg10 <-predict(fitg10,Mind1,interval = 'prediction')
premg10 <- data.frame( preMg10, "g10" = Mind1$g10)
mg10 <- ggplot(data = premg10,mapping = aes(x = fit,y = g10 ))
mg10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)+ geom_line(
mapping = aes(x=fit,y = upr)) + geom_line(aes(x = fit, y = lwr))
preMg10 <-predict(fitg10,Mind1,interval = 'prediction')
premg10 <- data.frame( preMg10, "g10" = Mind1$g10)
mg10 <- ggplot(data = premg10,mapping = aes(x = fit,y = g10 ))
mg10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)+ geom_line(
mapping = aes(x=fit,y = upr)) + geom_line(aes(x = fit, y = lwr))+xlim(c(0,125))
preMr10 <-predict(fitr10,Mind1,interval = 'prediction')
premr10 <- data.frame( preMr10, "r10" = Mind1$r10)
mr10 <- ggplot(data = premr10,mapping = aes(x = fit,y = r10 ))
mr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "预测值",y="真实值") + geom_smooth(col = "red",cex=1)+ylim(c(0,150))+ geom_line(
mapping = aes(x=fit,y = upr)) + geom_line(aes(x = fit, y = lwr))
preMr10 <-predict(fitr10,Mind1,interval = 'prediction')
premr10 <- data.frame( preMr10, "r10" = Mind1$r10)
mr10 <- ggplot(data = premr10,mapping = aes(x = r10,y = fit ))
mr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "预测值",y="真实值") + geom_smooth(col = "red",cex=1)+ylim(c(0,150))+ geom_line(
mapping = aes(x=fit,y = upr)) + geom_line(aes(x = fit, y = lwr))
preNr10 <-predict(fitr10N,Nind1,interval = 'prediction')
prenr10 <- data.frame(preNr10, "r10" = Nind1$r10)
nr10 <- ggplot(data = prenr10,mapping = aes(x = r10,y = fit ))
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "预测值",y="真实值") + geom_smooth(col = "red",cex=1) + geom_line(
mapping = aes(x=fit,y = upr)) + geom_line(aes(x = fit, y = lwr))
preNr10 <-predict(fitr10N,Nind1,interval = 'prediction')
prenr10 <- data.frame(preNr10, "r10" = Nind1$r10)
nr10 <- ggplot(data = prenr10,mapping = aes(x = r10,y = fit ))
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1) + geom_line(
mapping = aes(x=fit,y = upr)) + geom_line(aes(x = fit, y = lwr))
preMr10 <-predict(fitr10,Mind1,interval = 'prediction')
premr10 <- data.frame( preMr10, "r10" = Mind1$r10)
mr10 <- ggplot(data = premr10,mapping = aes(x = r10,y = fit ))
mr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "预测值",y="真实值") + geom_smooth(col = "red",cex=1)+ylim(c(0,150))
preMr10 <-predict(fitr10,Mind1,interval = 'prediction')
premr10 <- data.frame( preMr10, "r10" = Mind1$r10)
mr10 <- ggplot(data = premr10,mapping = aes(x = r10,y = fit ))
mr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)+ylim(c(0,150))
preNr10 <-predict(fitr10N,Nind1,interval = 'prediction')
prenr10 <- data.frame(preNr10, "r10" = Nind1$r10)
nr10 <- ggplot(data = prenr10,mapping = aes(x = r10,y = fit ))
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)
preMr10 <-predict(fitr10,Mind1,interval = 'prediction')
premr10 <- data.frame( preMr10, "r10" = Mind1$r10)
mr10 <- ggplot(data = premr10,mapping = aes(x = r10,y = fit ))
mr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)+ylim(c(0,150))
preNr10 <-predict(fitr10N,Nind1,interval = 'prediction')
prenr10 <- data.frame(preNr10, "r10" = Nind1$r10)
nr10 <- ggplot(data = prenr10,mapping = aes(x = r10,y = fit ))
nr10 + geom_point() + geom_abline(intercept = 0, slope =1,col = "blue",linetype
= 2,cex=1)+theme(axis.text=element_text(
face="bold",size=12,colour = 'black'),axis.title=element_text(size = 15)) +
labs(x = "真实值",y="预测值") + geom_smooth(col = "red",cex=1)
Mind1
maval <- data.frame("a00" = M_in00$a,"a01" = M_in01$a, "a05" = M_in05$a,"a10" = M_in10$a)
Min_00
M_in00
M_in01
M_in05
M_in10
maval <- data.frame("a00" = M_in00$a,"a01" = M_in01$a, "a05" = M_in05$a,"a10" = M_in10$a)
maval <- data.frame(M_in00$a,M_in01$a,   M_in05$a, M_in10$a)
maval <- cbind(M_in00$a,M_in01$a,  M_in05$a, M_in10$a)
maval
maval <- cbind(M_in00$a,M_in01$a, M_in05$a, M_in10$a)
maval <- cbind(M_in00$a,M_in01$a)
maval
M_in00$a
cbind(M_in00$a,M_in01$a)
rbind(M_in00$a,M_in01$a)
maval$a00 <- M_in00$a
maval
maval <- Null
maval <- NULL
maval <- data.frame()
maval$a00 <- M_in00$a
rm(maval)
maval$a00 <- M_in00$a
maval <- data.frame(M_in00$a)
maval
colnames(maval) <- "a00"
head(maval)
maval$a01 <- M_in01$a
head(maval)
maval$aa <- M_in01$a
head(maval)
data.frame(maval,M_in01$a)
M_in01$a
M_in01
maval <- data.frame("a00" = M_in00$a,"a01" = M_in01$allc/M_in01$h.index^2,"a05" = M_in05$allc/M_in05$h.index^2,
"a10" = M_in10$allc/M_in05$h.index^2)
head(maval)
summary(maval)
maval
maval <- maval[-145,]
maval
M_in10
fitrh <- lm(rhavg ~ number + year1st + vip + avc + allc, data = M_in10)
summary(fitrh)
fitrhn <- lm(rhavg ~ number + year1st + vip + avc + allc, data = N_in10)
summary(fitrhn)
plot(N_in10$rhavg, fitrhn$fitted.values)
corin1
datanl1
g_index
datanl
datanl <- function(data,researcher ="researcher", totct = "tc", pbsr = "source",
pyear = "pyear") {
# data is a data.frame contains a single author's research articles.
# researcher is a variable name(a column index) that represents the
# researcher's name of eacher article.
# totct is a variable name(a column index) that represents the total
# citation of each article.
# pbsr is a variable name that represents the pulication source(which
# journal the article has been published).
# pyear is a variable name that represents the publication year of each
# paper.
bibm <- function(data,researcher ="researcher", totct = "tc", pbsr = "source",
pyear = "pyear") {
h <- 0; g <- 0; r <- 0; y <- 0; allc <- 0
data <- data[order(data[,totct],decreasing = TRUE),]
data[,pbsr] <- as.factor(data[,pbsr])
h <- Hindex(data); g <- gindex(data); y <- 2014 - min(data[,pyear]) +1
r <- rindex(data); allc <- sum(data[,totct])
qqq <- data.frame(data[,researcher][1])
colnames(qqq)[1] <- "researcher"
qqq$h.index <- h; qqq$g.index <- g; qqq$r.index <- r
qqq$number <- length(data[,totct]); qqq$year1st <- y
qqq$journals <- length(unique(data[,pbsr])); qqq$vip <- jnal(data)
qqq$avc <- allc/length(data[,totct]);qqq$allc <- allc
#qqq$rhmax <- rmhindex(data)[1]
#qqq$rhmin <- rmhindex(data)[2]
#qqq$rhavg <- rmhindex(data)[3]
return(qqq)
}
res <- unique(data[, researcher])
data$resch1 <- data[,researcher]
qqq <- bibm(subset(data, resch1 == res[1]))
if(length(res) == 1){
qqq <- qqq
} else {
for (j in 2:length(res)) {
qqq <- rbind(qqq, bibm(subset(data, resch1 == res[j])))
}
}
return(qqq)
}
